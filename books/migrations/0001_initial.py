# Generated by Django 4.0.3 on 2022-03-30 20:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_names', models.CharField(max_length=50, verbose_name='The contributor first name or names')),
                ('last_name', models.CharField(max_length=50, verbose_name='The contributor last name')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the book.', max_length=100)),
                ('publication_date', models.DateField(verbose_name='Publication date of the book')),
                ('isbn', models.CharField(max_length=15, verbose_name='ISBN number of the book')),
                ('pages_count', models.IntegerField(verbose_name='Number of pages in the book')),
                ('cover_url', models.URLField(verbose_name='URL to book cover')),
                ('pub_language', models.CharField(max_length=2, verbose_name='Language of the book publication')),
            ],
        ),
        migrations.CreateModel(
            name='BookAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.author')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.book')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='authors',
            field=models.ManyToManyField(through='books.BookAuthor', to='books.author'),
        ),
    ]
